name: webkit-embedded # you probably want to 'snapcraft register <name>'
base: core18 # the base snap is the execution environment for this snap
version: "0.1" # just for humans, typically '1.2+git' or '1.3.2'
summary: Single-line elevator pitch for your amazing snap # 79 char long summary
description: |
  This is my-snap's description. You have a paragraph or two to tell the
  most important story about your snap. Keep it under 100 words though,
  we live in tweetspace and your description wants to look good in the snap
  store.

grade: devel # must be 'stable' to release into candidate/stable channels
confinement: strict # use 'strict' once you have the right plugs and slots

apps:
  wpewebkit:
    command: launch-wpe "https://localhost/display"
    daemon: simple
    restart-condition: always
    plugs:
      - wayland

parts:
  libwpe:
    plugin: cmake
    source: https://wpewebkit.org/releases/libwpe-1.1.0.tar.xz
    configflags:
      - -DCMAKE_BUILD_TYPE=Release
      - -GNinja
    build-packages:
      - build-essential
      - libegl1
      - libegl1-mesa-dev
      - libglib2.0-dev
      - libxkbcommon-dev
    stage-packages:
      - libxkbcommon0

  wpebackend-fdo:
    after: [libwpe]
    plugin: cmake
    configflags:
      - -DCMAKE_BUILD_TYPE=Release
      - -GNinja
    source: https://wpewebkit.org/releases/wpebackend-fdo-1.1.0.tar.xz
    build-packages:
      - build-essential
      - libegl1
      - libegl-mesa0
      - libegl1-mesa-dev
      - libwayland-egl1
      - libglib2.0-dev
      - libxkbcommon-dev
    stage-packages:
      - libegl1-mesa
      - libwayland-egl1
      - libxkbcommon0

  wpe-webkit:
    after: [wpebackend-fdo]
    source: https://wpewebkit.org/releases/wpewebkit-2.22.4.tar.xz
    plugin: cmake
    configflags:
      - -DPORT=WPE
      - -DCMAKE_BUILD_TYPE=Release
      - -DENABLE_MINIBROWSER=ON
      - -GNinja
    build-packages:
      - build-essential
      - gperf
      - ninja-build
      - libcairo2-dev
      - libepoxy-dev
      - libgbm-dev
      - libgcrypt20-dev
      - libgstreamer-plugins-base1.0-dev
      - libicu-dev
      - libjpeg8-dev
      - libsoup2.4-dev
      - libsqlite3-dev
      - libtasn1-6-dev
      - libwebp-dev
      - libwoff-dev
      - libxml2-dev
      - libxslt1-dev
      - pkg-config
      - python
      - ruby-dev
      - wayland-protocols
      - weston
      - zlib1g-dev
    stage-packages:
      - libcairo2
      - libepoxy0
      - libgbm1
      - libgl1
      - libglx0
      - libgcrypt20
      - libgstreamer-gl1.0-0
      - libgstreamer-plugins-base1.0-0
      - libharfbuzz-icu0
      - libicu60
      - libjpeg8
      - liborc-0.4-0
      - libsoup2.4-1
      - libsqlite3-0
      - libtasn1-6
      - libwebp6
      - libwebpdemux2
      - libwoff1
      - libxml2
      - libxslt1.1
      - python
      - ruby
      - zlib1g
    override-pull: |
      snapcraftctl pull
      # Add correct compiler macro for clang
      # see https://gcc.gnu.org/ml/gcc-patches/2015-07/msg02237.html
      # Second insertions are source's line number + 1 (from prev insertion)
      sed -i '143i|| defined(__ARM_ARCH_6KZ__) \\' Source/bmalloc/bmalloc/BPlatform.h
      sed -i '184i|| defined(__ARM_ARCH_6KZ__) \\' Source/bmalloc/bmalloc/BPlatform.h
      sed -i '188i|| defined(__ARM_ARCH_6KZ__) \\' Source/WTF/wtf/Platform.h
      sed -i '236i|| defined(__ARM_ARCH_6KZ__) \\' Source/WTF/wtf/Platform.h
    override-build: |
      # clang err's because some ruby gluecode cannot determine LP builder's endian type, gcc works
      # export CC=/usr/bin/clang 
      # export CXX=/usr/bin/clang++

      # ARM builders on LP don't link python2.7 as /usr/bin/python, but WK just calls 'python'
      #if [ “$(arch)” = “arm” ]; then
      #  ln -s /usr/bin/python2.7 /usr/bin/python
        # Bail early if linking didn't work, or WebKit build will fail after ~ 2.5h
      if [ -z $(which python) ]; then
        exit 1
      fi
      #fi
      snapcraftctl build

  launch-wpe:
    plugin: dump
    source: src
    organize:
      launch-wpe: bin/
