name: wpe-webkit-mir-kiosk
base: core18
version: "2.22.5"  # wpe-webkit release version
summary: WPE Webkit in kiosk mode. Intended for mir-kiosk on embedded devices.
description: |
  'WPE Webkit (https://wpewebkit.org) is an official fork of the WebKit project.
  From the website: “WPE WebKit allows embedders to create simple and performant
  systems based on Web platform technologies. It is designed with hardware
  acceleration in mind, leveraging common 3D graphics APIs for best
  performance.”
  This snap runs the included MiniBrowser as a service in kiosk mode.'

grade: devel
confinement: strict

# TODO: Check if these paths can be made relative with compiler flags
layout:
  # Relies on cmake install prefix $SNAP/usr, /libexec is not allowed
  /usr/libexec/wpe-webkit-0.1:
    bind: $SNAP/usr/libexec/wpe-webkit-0.1
  /usr/lib/$SNAPCRAFT_ARCH_TRIPLET/wpe-webkit-0.1:
    bind: $SNAP/usr/lib/$SNAPCRAFT_ARCH_TRIPLET/wpe-webkit-0.1
  /etc/fonts/conf.avail:
    bind: $SNAP/etc/fonts/conf.avail
  /etc/ssl/certs/ca-certificates.crt:
    bind-file: $SNAP/etc/ssl/certs/ca-certificates.crt
  /usr/share/fonts:
    bind: $SNAP/usr/share/fonts
  /usr/local/share/fonts:  # wpe-webkit: Search ALL the fonts!
    bind: $SNAP/usr/share/fonts

apps:
  browser:
    # TODO: Make URL configurable, see chromium-mir-kiosk
    # https://git.launchpad.net/~gerboland/+git/chromium-snap/tree/snap/hooks/configure?h=mir-kiosk
    command: bin/snapcraft-preload $SNAP/bin/launch-wpe "https://wpewebkit.org"
    daemon: simple
    restart-condition: always
    plugs:
      - wayland
      - opengl
      - network
      - upower-observe
      # not auto-connected, show up as AppArmor denials but
      # basic browsing seems to work fine without
      - network-manager
      - avahi-observe
      - hostname-control
      - process-control

    environment:
      LIBGL_DRIVERS_PATH: ${SNAP}/usr/lib/${SNAPCRAFT_ARCH_TRIPLET}/dri
      # cf. https://tutorials.ubuntu.com/tutorial/wayland-kiosk#9
      # Liberally adapted from
      # https://github.com/MirServer/mir-kiosk-apps/blob/master/snap/snapcraft.yaml
      # Some might not be needed, but omitting some would either crash
      # the WPE renderer process or cause AppArmor denials
      __EGL_VENDOR_LIBRARY_DIRS: $SNAP/etc/glvnd/egl_vendor.d:$SNAP/usr/share/glvnd/egl_vendor.d
      XKB_CONFIG_ROOT: ${SNAP}/usr/share/X11/xkb
      XDG_CONFIG_DIRS: ${SNAP}/etc/xdg:$XDG_CONFIG_DIRS
      XDG_DATA_DIRS: ${SNAP}/etc/xdg:${SNAP}/usr/share:$XDG_DATA_DIRS
      XDG_DATA_HOME: ${SNAP}/usr/share
      XDG_CACHE_HOME: $SNAP_COMMON/cache
      FONTCONFIG_PATH: ${SNAP}/etc/fonts/conf.d
      FONTCONFIG_FILE: ${SNAP}/etc/fonts/fonts.conf

parts:
  # NOTICE: LP builders only get 2h of internet access,
  # so all online sources need to be fetched before wpe-webkit is built
  snapcraft-preload:
    source: https://github.com/sergiusens/snapcraft-preload.git
    plugin: cmake
    build-packages:
      - on amd64:
          - gcc-multilib
          - g++-multilib

  libwpe:
    after: [snapcraft-preload]
    plugin: cmake
    # latest stable release
    source: https://wpewebkit.org/releases/libwpe-1.0.0.tar.xz
    configflags:
      - -DCMAKE_BUILD_TYPE=Release
      - -GNinja
    build-packages:
      - build-essential
      - libegl1
      - libegl1-mesa-dev
      - libglib2.0-dev
      - libxkbcommon-dev
    stage-packages:
      - libxkbcommon0

  wpebackend-fdo:
    after: [libwpe]
    plugin: cmake
    configflags:
      - -DCMAKE_BUILD_TYPE=Release
      - -GNinja
    # latest stable release
    source: https://wpewebkit.org/releases/wpebackend-fdo-1.0.1.tar.xz
    build-packages:
      - build-essential
      - libegl1
      - libegl-mesa0
      - libegl1-mesa-dev
      - libwayland-egl1
      - libglib2.0-dev
      - libxkbcommon-dev
    stage-packages:
      - libegl1-mesa
      - libwayland-egl1
      - libxkbcommon0

  wpe-webkit:
    after: [wpebackend-fdo]
    # latest stable release
    source: https://wpewebkit.org/releases/wpewebkit-2.22.5.tar.xz
    plugin: cmake
    configflags:
      - -DPORT=WPE
      - -DCMAKE_BUILD_TYPE=Release
      - -DCMAKE_INSTALL_PREFIX:PATH=/usr
      - -GNinja
    build-packages:
      - build-essential
      - gperf
      - ninja-build
      - libcairo2-dev
      - libepoxy-dev
      - libgbm-dev
      - libgcrypt20-dev
      - libgstreamer-plugins-base1.0-dev
      - libicu-dev
      - libjpeg8-dev
      - libsoup2.4-dev
      - libsqlite3-dev
      - libtasn1-6-dev
      - libwebp-dev
      - libwoff-dev
      - libxml2-dev
      - libxslt1-dev
      - pkg-config
      - python
      - ruby-dev
      - wayland-protocols
      # TODO: Are these still required without the minibrowser?
      - weston
      - zlib1g-dev
    stage-packages:
      - libcairo2
      - libepoxy0
      - libgbm1
      - libgl1
      - libglx0
      - libgcrypt20
      - libgstreamer-gl1.0-0
      - libgstreamer-plugins-base1.0-0
      - libharfbuzz-icu0
      - libicu60
      - libjpeg8
      - liborc-0.4-0
      - libsoup2.4-1
      - libsqlite3-0
      - libtasn1-6
      - libwebp6
      - libwebpdemux2
      - libwoff1
      - libxml2
      - libxslt1.1
      - python
      - ruby
      - zlib1g
      # Runtime requirements for cog browser
      - glib-networking-common
      - glib-networking-services
      - glib-networking  # required for SSL/TLS support
      - libgles2
      # zeroconf/Bonjour name resolution, because why not
      - libavahi-core7
      - libavahi-glib1
      - libavahi-common3
      - libavahi-client3
    # override-pull: |
    # snapcraftctl pull
    # Add correct compiler macro for clang
    # see https://gcc.gnu.org/ml/gcc-patches/2015-07/msg02237.html
    # Second insertions are source's line number + 1 (from prev insertion)
    # sed -i '143i|| defined(__ARM_ARCH_6KZ__) \\' Source/bmalloc/bmalloc/BPlatform.h
    # sed -i '184i|| defined(__ARM_ARCH_6KZ__) \\' Source/bmalloc/bmalloc/BPlatform.h
    # sed -i '188i|| defined(__ARM_ARCH_6KZ__) \\' Source/WTF/wtf/Platform.h
    # sed -i '236i|| defined(__ARM_ARCH_6KZ__) \\' Source/WTF/wtf/Platform.h
    # override-build: |
    # clang err's because some ruby gluecode cannot determine LP builder's endian type, gcc works
    # export CC=/usr/bin/clang
    # export CXX=/usr/bin/clang++
    # snapcraftctl build
    organize:
      libexec: usr/

  cog:
    after: [wpe-webkit]
    plugin: cmake
    # Build cog offline from checkout since LP builders lose
    # internet access after 2h and wpe-webkit is required
    # for cog build.
    # source: https://github.com/Igalia/cog.git
    # source-tag: v0.2.0
    source: src/cog
    configflags:
      # TODO: Change to release once thorougly tested
      - -DCMAKE_BUILD_TYPE=Debug
      - -DCMAKE_INSTALL_PREFIX:PATH=/usr
      - -GNinja
    # stage-packages required by cog at runtime are added in wpe-webkit part
    # due to LP proxy restrictions
    override-prime: |
      snapcraftctl prime
      glib-compile-schemas usr/share/glib-2.0/schemas/
      # see https://stackoverflow.com/questions/28953925/glib-gio-error-no-gsettings-schemas-are-installed-on-the-system
      update-ca-certificates # creates ca-certificates.crt on build host
      cp /etc/ssl/certs/ca-certificates.crt etc/ssl/certs/

  launch-wpe:
    plugin: dump
    source: src/launcher
    organize:
      launch-wpe: bin/
