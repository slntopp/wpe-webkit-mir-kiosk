name: wpe-webkit-mir-kiosk
base: core20
version: "2.28.1" # wpe-webkit release version. TODO: use adopt-info
summary: WPE Webkit in kiosk mode. Intended for mir-kiosk on embedded devices.
description: |
  'WPE Webkit (https://wpewebkit.org) is an official fork of the WebKit project.
  From the website: “WPE WebKit allows embedders to create simple and performant
  systems based on Web platform technologies. It is designed with hardware
  acceleration in mind, leveraging common 3D graphics APIs for best
  performance.”
  This snap runs the included MiniBrowser as a service in kiosk mode.'

grade: stable
confinement: strict

# TODO: Check if these paths can be made relative with compiler flags
layout:
  # Relies on cmake install prefix $SNAP/usr, /libexec is not allowed
  /usr/libexec/wpe-webkit-1.0:
    bind: $SNAP/usr/wpe-webkit-1.0
  /usr/lib/$SNAPCRAFT_ARCH_TRIPLET/wpe-webkit-1.0:
    bind: $SNAP/usr/lib/$SNAPCRAFT_ARCH_TRIPLET/wpe-webkit-1.0
  /etc/fonts/conf.avail:
    bind: $SNAP/etc/fonts/conf.avail
  /etc/ssl/certs/ca-certificates.crt:
    bind-file: $SNAP/etc/ssl/certs/ca-certificates.crt
  /usr/share/fonts:
    bind: $SNAP/usr/share/fonts
  /usr/local/share/fonts: # wpe-webkit: Search ALL the fonts!
    bind: $SNAP/usr/share/fonts

plugs:
  # Auto-connected
  wayland:
  opengl: # required for libEGL to work
  network:
  network-bind: # Remote inspector
  upower-observe:
  # Manually connected, show up as AppArmor denials but
  # basic browsing seems to work fine without
  avahi-observe: # zeroconf name resolution
  # snappy-debug suggestions
  network-manager:
  hostname-control:
  process-control:
  # - browser-support # TODO: Use this if/when we can get rid of preload/desktop-launch

slots:
  dbus-cogctl:
    interface: dbus
    bus: system
    name: com.igalia.Cog

apps:
  daemon:
    command-chain:
      - bin/run-daemon
      - bin/wayland-launch
    command: bin/launch-wpe
    daemon: simple
    restart-condition: always
    slots: [dbus-cogctl]
  restart-watcher:
    command: bin/watcher.sh
    daemon: simple
    restart-condition: always

  mir-kiosk-wpe-webkit:
    command-chain:
      - bin/wayland-launch
    command: bin/launch-wpe

parts:
  mir-kiosk-snap-launch:
    plugin: dump
    source: https://github.com/MirServer/mir-kiosk-snap-launch.git
    override-build: $SNAPCRAFT_PART_BUILD/build-with-plugs.sh opengl pulseaudio wayland
    stage-packages:
      - inotify-tools

  # See Source/cmake/WebKitFeatures.cmake for build-time options.
  # See Source/cmake/OptionsWPE.cmake for overrides applied by WPE.
  # See Source/cmake/OptionsWPE.cmake for required packages.
  cog:
    plugin: cmake
    source: https://github.com/Igalia/cog.git
    source-tag: v0.8.0
    cmake-parameters:
      - -DCMAKE_BUILD_TYPE=Release
      - -GNinja
      - -DCOG_DBUS_SYSTEM_BUS=ON
    build-packages:
      - ninja-build
      - libcairo2-dev
      - libsoup2.4-dev
      - libxkbcommon-dev
      - libwayland-dev
      - libegl1-mesa-dev
      - wayland-protocols
      - libwayland-bin
      # WPE prebuilt dev packages
      - libwpewebkit-1.0-dev
      - libwpebackend-fdo-1.0-dev
    stage-packages:
      # Runtime requirements for cog browser
      - glib-networking # required for SSL/TLS support
      - glib-networking-common
      - glib-networking-services
      - libgles2
      - libslang2 # dep for gstreamer ASCII art modules ¯\_(ツ)_/¯
      - libgpm2 # mouse
      - libgdk-pixbuf2.0-0
      # TODO: Fix zeroconf/Bonjour name resolution, these don't seem to suffice
      - libavahi-core7
      - libavahi-glib1
      - libavahi-common3
      - libavahi-client3
      - libwayland-cursor0
      # WPE prebuilt packages;
      - libwpewebkit-1.0-3
      - libwpebackend-fdo-1.0-1
      # dependencies listed for cog 0.4.0 debian package:
      - libxkbcommon0
      - libegl1
      - libglib2.0-0
      - libsoup2.4-1
      - libwayland-client0
      - libwayland-egl1
      - freeglut3
      - libglu1-mesa
      - shared-mime-info
    override-prime: |
      snapcraftctl prime
      glib-compile-schemas usr/share/glib-2.0/schemas/
      # see https://stackoverflow.com/questions/28953925/glib-gio-error-no-gsettings-schemas-are-installed-on-the-system
      # creates ca-certificates.crt on build host and copies to snap prime dir
      update-ca-certificates
      mkdir -p etc/ssl/certs
      cp /etc/ssl/certs/ca-certificates.crt etc/ssl/certs/
    organize:
      usr/local/: /

  launch-wpe:
    plugin: dump
    source: src/launcher
    organize:
      launch-wpe: bin/

  restart-watcher:
    plugin: dump
    source: src/watcher
    stage-packages:
      - inotify-tools
    organize:
      watcher.sh: bin/
